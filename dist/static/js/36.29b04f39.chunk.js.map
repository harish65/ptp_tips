{"version":3,"sources":["pages/proTips/index.js"],"names":["useStyles","makeStyles","root","width","container","maxHeight","columndata","loggedIn","id","label","class","align","minWidth","special","value","React","createElement","Fragment","Chip","className","raceDate","raceTime","trackcode","concat","raceNo","AiFillLock","format","parseFloat","toFixed","connect","state","currentUser","auth","getRaces","protipRacesReducer","isLoggedIn","memo","props","_useState","useState","_useState2","_slicedToArray","logedIn","setLogedIn","_useState3","_useState4","newArr","setNewArr","_useState5","_useState6","page","setPage","_useState7","_useState8","rowsPerPage","setRowsPerPage","_useState9","_useState10","columns","setColumns","classes","useEffect","dispatch","actions","getProtipRaces","then","res","mapping","info","data","logged","map","v","_objectSpread","rInfo","race_date","race_time","race_no","dummyData","race_e_win_g","race_e_win_s","race_e_win_sy","race_selection_synth","race_selection","race_selection_soft","num","Array","from","length","style","marginTop","Helmet","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","TableBody","slice","row","i","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target"],"mappings":"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","file":"static/js/36.29b04f39.chunk.js","sourcesContent":["import React, { useState, useEffect, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { AiFillLock } from \"react-icons/ai\";\r\nimport actions from \"../../redux/actions/protipRaces\";\r\nimport \"./proTips.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 582,\r\n  },\r\n});\r\nconst columndata = function (loggedIn) {\r\n  return [\r\n    {\r\n      id: \"rInfo\",\r\n      label: \"R. Info\",\r\n      class: \"r-info\",\r\n      align: \"center\",\r\n      minWidth: 50,\r\n      special: (value) =>\r\n        loggedIn ? (\r\n          <>\r\n            <Chip className=\"date-chip\" label={value?.raceDate}></Chip>\r\n            <Chip className=\"time-chip\" label={value?.raceTime}></Chip>\r\n            <br />\r\n            <Chip className=\"track-chip\" label={value?.trackcode}></Chip>\r\n            <Chip className=\"race-no-chip\" label={`R.${value?.raceNo}`}></Chip>\r\n          </>\r\n        ) : (\r\n          <AiFillLock />\r\n        ),\r\n    },\r\n    {\r\n      //id: \"tip\",\r\n      label: \"Tips\",\r\n      class: \"r-select\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"race_selection\",\r\n      label: \"Gd\",\r\n      class: \"r-select\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"race_e_win_g\",\r\n      label: \"Mx\",\r\n      class: \"r-ewing\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n      format: (value) => parseFloat(value).toFixed(2),\r\n    },\r\n    {\r\n      id: \"race_selection_soft\",\r\n      label: \"Sft\",\r\n      class: \"r-select-soft\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"race_e_win_s\",\r\n      label: \"Mx\",\r\n      class: \"r-ewins\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n      format: (value) => parseFloat(value).toFixed(2),\r\n    },\r\n    {\r\n      id: \"race_selection_synth\",\r\n      label: \"Syn\",\r\n      class: \"r-select-syn\",\r\n      minWidth: 40,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      id: \"race_e_win_sy\",\r\n      label: \"Mx\",\r\n      minWidth: 40,\r\n      class: \"r-winsy\",\r\n      align: \"center\",\r\n      format: (value) => parseFloat(value).toFixed(2),\r\n    },\r\n  ];\r\n};\r\nconst ProTips = (props) => {\r\n  const [logedIn, setLogedIn] = useState(null);\r\n  const [newArr, setNewArr] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(50);\r\n  const [columns, setColumns] = useState(columndata(props.loggedIn));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setColumns([]);\r\n    props?.loggedIn ? setLogedIn(true) : setLogedIn(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.loggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (logedIn) {\r\n      props.dispatch(actions.getProtipRaces()).then((res) => {\r\n        mapping(res, logedIn);\r\n      });\r\n    }\r\n    setColumns(columndata(logedIn));\r\n    mapping(props.getRaces.info, logedIn);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [logedIn]);\r\n\r\n  const mapping = (data, logged) => {\r\n    if (logged) {\r\n      setNewArr(\r\n        data.map((v) => ({\r\n          ...v,\r\n          rInfo: {\r\n            raceDate: v?.race_date,\r\n            raceTime: v?.race_time,\r\n            trackcode: v?.trackcode,\r\n            raceNo: v?.race_no,\r\n          },\r\n        }))\r\n      );\r\n    } else {\r\n      const dummyData = () => {\r\n        return {\r\n          raceDate: \"2021-12-06\",\r\n          raceTime: \"14:35\",\r\n          trackcode: \"WAGGA\",\r\n          raceNo: 1,\r\n          race_e_win_g: 8.5,\r\n          race_e_win_s: 0,\r\n          race_e_win_sy: 0,\r\n          race_selection_synth: 0,\r\n          race_selection: 8,\r\n          race_selection_soft: 0,\r\n          rInfo: {\r\n            raceDate: \"2021-12-06\",\r\n            raceTime: \"14:35\",\r\n            trackcode: \"WAGGA\",\r\n            raceNo: 1,\r\n          },\r\n        };\r\n      };\r\n      const createDummyArr = (num) => {\r\n        return Array.from({ length: num }, dummyData);\r\n      };\r\n\r\n      setNewArr(createDummyArr(77));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n      <div style={{ marginTop: 32 }}>\r\n        <Helmet>\r\n          <title>PTP Pro Tips</title>\r\n        </Helmet>\r\n\r\n        {(props.getRaces.info.data !== null && props.getRaces.info) ||\r\n        !logedIn ? (\r\n          <section className=\"pro-tips-table\">\r\n            <Paper className={classes.root}>\r\n              <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {columns?.map((column) => (\r\n                        <TableCell\r\n                          key={column.id}\r\n                          align={column.align}\r\n                          style={{ minWidth: column.minWidth }}\r\n                        >\r\n                          {column.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {newArr\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, i) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={row.raceDate + i}\r\n                          >\r\n                            {columns?.map((column) => {\r\n                              const value = logedIn ? (\r\n                                row[column.id]\r\n                              ) : (\r\n                                <AiFillLock />\r\n                              );\r\n                              return (\r\n                                <TableCell\r\n                                  key={column.id}\r\n                                  align={column.align}\r\n                                  className={column?.class}\r\n                                >\r\n                                  {column.format && logedIn\r\n                                    ? column.format(value)\r\n                                    : column.special\r\n                                    ? column.special(value)\r\n                                    : value}\r\n                                </TableCell>\r\n                              );\r\n                            })}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[25, 50, 100]}\r\n                component=\"div\"\r\n                count={newArr.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </section>\r\n        ) : (\r\n          <strong>There is no selections for today.</strong>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.auth.currentUser,\r\n  getRaces: state.protipRacesReducer,\r\n  loggedIn: state.auth.isLoggedIn,\r\n});\r\n\r\nexport default connect(mapStateToProps)(memo(ProTips));\r\n"],"sourceRoot":""}