{"version":3,"sources":["pages/StripePayment/SubscriptionHistory.js","pages/StripePayment/StripePaymentHistory.js","pages/StripePayment/Checkout.js"],"names":["connect","state","currentUser","auth","loggedIn","isLoggedIn","currentsubscriptionreducer","CurrentPlan","props","_useState","useState","_useState2","_slicedToArray","currentplan","setCurrentPlan","_React$useState","React","_React$useState2","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","setSearchinp","lastind","length","useEffect","dispatch","actions","CurrentSubscription","client_id","id","then","res","data","classes","makeStyles","theme","root","marginTop","spacing","useStyles","createElement","Fragment","class","style","height","alignItems","role","maxWidth","backgroundImage","color","className","plan_name","start_date","amount","end_date","backgroundColor","padding","borderRadius","marginBottom","margin","display","justifyContent","type","placeholder","aria-label","onChange","e","target","value","toLowerCase","SearchIcon","fontSize","scope","slice","map","ele","index","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","flexDirection","width","textAlign","searchinp","_React$useState7","_React$useState8","TranscationData","setTransactionData","console","log","StripeTransactions","filter","item","payment_status","includes","created_at","client_email","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","content","alignContent","div","button","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","invalid","iconColor","planDetails","stripepricedata","location","useLocation","email","setEmail","_useState3","_useState4","setName","_useState5","_useState6","line1","setLine1","_useState7","_useState8","postal_code","setpostal_code","_useState9","_useState10","city","setCity","_useState11","_useState12","setState","_useState13","_useState14","country","setCountry","_useState15","priceid","_useState16","_useState17","_useState18","AddressValidate","setAddressValidate","_useState19","_useState20","loading","setLoading","stripe","useStripe","elements","useElements","handleSubmitSub","_ref","_asyncToGenerator","_callee","_res$data","client_secret","status","_context","createPaymentMethod","card","getElement","CardElement","billing_details","message","axios","post","payment_method","paymentMethod","confirmCardPayment","toast","success","_x","apply","arguments","handlechangeAddress","_ref2","_callee2","_context2","address","_x2","Card","CardContent","TextField","label","helperText","variant","required","fullWidth","options","AddressElement","mode","Button","onClick","src","alt","plan"],"mappings":";oLAwOeA,uBANS,SAACC,GAAK,MAAM,CAClCC,YAAaD,EAAME,KAAKD,YACxBE,SAAUH,EAAME,KAAKE,WACrBC,2BAA4BL,EAAMK,2BAA2BC,eAGhDP,EAjOa,SAACQ,GAC3B,IAAAC,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAwBC,IAAMN,SAAS,GAAEO,EAAAL,YAAAG,EAAA,GAAlCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsCJ,IAAMN,SAAS,IAAGW,EAAAT,YAAAQ,EAAA,GAAjDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAkCR,IAAMN,SAAS,IAAGe,EAAAb,YAAAY,EAAA,GAAlCE,GAAFD,EAAA,GAAcA,EAAA,IAExBE,EAAUd,EAAYe,OAE5BC,qBAAU,WACJrB,EAAMN,YACRM,EACGsB,SACCC,IAAQC,oBAAoB,CAC1BC,UAAWzB,EAAMN,YAAYgC,MAGhCC,MAAK,SAACC,GACLtB,EAAkB,OAAHsB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,SAGxBvB,EAAe,MAEhB,CAACN,EAAMN,cAEV,IAwBMoC,EARYC,aAAW,SAACC,GAAK,MAAM,CACvCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,QAKfC,GAehB,OACE5B,IAAA6B,cAAA7B,IAAA8B,SAAA,KACItC,EAAMN,YAgBNc,IAAA6B,cAAA7B,IAAA8B,SAAA,MACIjC,EAAYe,OAAS,EACrBZ,IAAA6B,cAAA,OACEE,MAAM,gCACNC,MAAO,CAAEC,OAAQ,QAASC,WAAY,WAEtClC,IAAA6B,cAAA,OAAKE,MAAM,iBAAiBI,KAAK,UAC/BnC,IAAA6B,cAAA,QAAME,MAAM,WAAU,gBAI1B/B,IAAA6B,cAAA7B,IAAA8B,SAAA,KACE9B,IAAA6B,cAAA,OAAKE,MAAM,aAAaC,MAAO,CAAEI,SAAU,UACzCpC,IAAA6B,cAAA,OAAKE,MAAM,eAAc,uBACzB/B,IAAA6B,cAAA,OACEE,MAAM,YACNC,MAAO,CACLK,gBACE,sDACFC,MAAO,UAGTtC,IAAA6B,cAAA,OAAKU,UAAU,iCACbvC,IAAA6B,cAAA,WACE7B,IAAA6B,cAAA,MAAIE,MAAM,cAAa,gBACP,IACd/B,IAAA6B,cAAA,SAAIhC,EAAYc,EAAU,GAAG6B,UAAU,OAI3CxC,IAAA6B,cAAA,WACE7B,IAAA6B,cAAA,MAAIE,MAAM,cAAa,cACT,IACZ/B,IAAA6B,cAAA,SAAIhC,EAAYc,EAAU,GAAG8B,WAAW,QAK9CzC,IAAA6B,cAAA,OAAKU,UAAU,sCACbvC,IAAA6B,cAAA,WACE7B,IAAA6B,cAAA,MAAIE,MAAM,cAAa,WACb/B,IAAA6B,cAAA,SAAG,IAAEhC,EAAYc,EAAU,GAAG+B,UAI1C1C,IAAA6B,cAAA,WACE7B,IAAA6B,cAAA,MAAIE,MAAM,cAAa,gBACR/B,IAAA6B,cAAA,SAAIhC,EAAYc,EAAU,GAAGgC,SAAS,UAO7D3C,IAAA6B,cAAA,OAAKE,MAAM,gBAAgBC,MA/GrB,CAChBY,gBAAiB,QACjBN,MAAO,UACPO,QAAS,GACTC,aAAc,GACdC,aAAc,GACdrB,UAAW,KA0GC1B,IAAA6B,cAAA,OAAKG,MAvGF,CACfgB,OAAQ,OACRC,QAAS,OACTC,eAAgB,kBAqGFlD,IAAA6B,cAAA,UAAI,yBACJ7B,IAAA6B,cAAA,OAAKG,MAAO,CAAEiB,QAAS,OAAQf,WAAY,WACzClC,IAAA6B,cAAA,SACEE,MAAM,uBACNoB,KAAK,SACLC,YAAY,oBACZC,aAAW,SACXC,SArFA,SAACC,GACnB7C,EAAa6C,EAAEC,OAAOC,MAAMC,kBAsFZ1D,IAAA6B,cAAC8B,IAAU,CAAC3B,MAAO,CAAEa,QAAS,OAGlC7C,IAAA6B,cAAA,OAAKE,MAAM,cACT/B,IAAA6B,cAAA,OAAKE,MAAM,uBACT/B,IAAA6B,cAAA,SACEE,MAAM,QACNC,MAAO,CACLK,gBACE,+CACFC,MAAO,QACPsB,SAAU,SAGZ5D,IAAA6B,cAAA,aACE7B,IAAA6B,cAAA,MAAIE,MAAM,eACR/B,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,mBAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,qBAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,cAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,YAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,YAIpB7D,IAAA6B,cAAA,aACGhC,GACCA,EACGiE,MACC5D,EAAOI,EACPJ,EAAOI,EAAcA,GAEtByD,KAAI,SAACC,EAAKC,GACT,OACEjE,IAAA6B,cAAA7B,IAAA8B,SAAA,KACE9B,IAAA6B,cAAA,UACE7B,IAAA6B,cAAA,MAAIgC,MAAM,OACPI,EAAQ,EAAI/D,EAAOI,GAEtBN,IAAA6B,cAAA,UAAKmC,EAAIxB,WACTxC,IAAA6B,cAAA,UAAKmC,EAAIvB,YACTzC,IAAA6B,cAAA,UAAKmC,EAAIrB,UACT3C,IAAA6B,cAAA,UAAI,IAAEmC,EAAItB,iBAS9B1C,IAAA6B,cAAA,YAEA7B,IAAA6B,cAAA,OAAKU,UAAWjB,EAAQG,MACtBzB,IAAA6B,cAACqC,IAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,UAAU,MACVC,MAAOxE,EAAcA,EAAYe,OAAS,EAC1CN,YAAaA,EACbJ,KAAMA,EACNoE,aA3JO,SAACC,EAAOC,GAC/BrE,EAAQqE,IA2JQC,oBAxJc,SAACF,GAC/BhE,GAAgBgE,EAAMf,OAAOC,OAC7BtD,EAAQ,IAuJQ4B,MAAO,CAAEO,MAAO,cA7I5BtC,IAAA6B,cAAA,OACEG,MAAO,CACLiB,QAAS,OACTf,WAAY,SACZgB,eAAgB,SAChBxB,UAAW,OACXgD,cAAe,WAGjB1E,IAAA6B,cAAA,UAAI,0BACJ7B,IAAA6B,cAAA,KAAGG,MAAO,CAAE4B,SAAU,OAAQe,MAAO,QAASC,UAAW,WAAY,+D,2HCkHhE5F,uBALS,SAACC,GAAK,MAAM,CAClCC,YAAaD,EAAME,KAAKD,YACxBE,SAAUH,EAAME,KAAKE,cAGRL,EA7Lc,SAACQ,GAE5B,IAAAO,EAAwBC,IAAMN,SAAS,GAAEO,EAAAL,YAAAG,EAAA,GAAlCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsCJ,IAAMN,SAAS,IAAGW,EAAAT,YAAAQ,EAAA,GAAjDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAkCR,IAAMN,SAAS,IAAGe,EAAAb,YAAAY,EAAA,GAA7CqE,EAASpE,EAAA,GAAEC,EAAYD,EAAA,GAC9BqE,EAA8C9E,IAAMN,SAAS,IAAGqF,EAAAnF,YAAAkF,EAAA,GAAzDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,QAAQC,IAAI,kBAAkBH,GAE9BnE,qBAAU,WACJrB,EAAMN,YACRM,EACGsB,SACCC,IAAQqE,mBAAmB,CACzBnE,UAAWzB,EAAMN,YAAYgC,MAGhCC,MAAK,SAACC,GACL6D,EAAsB,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKC,SAG5B4D,EAAmB,MAEpB,CAACzF,EAAMN,cAEV,IAwBMoC,EARYC,aAAW,SAACC,GAAK,MAAM,CACvCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,QAKfC,GAehB,OACE5B,IAAA6B,cAAA7B,IAAA8B,SAAA,KACItC,EAAMN,YAgBdc,IAAA6B,cAAA7B,IAAA8B,SAAA,MAGGkD,EAAgBpE,OAAS,EAElBZ,IAAA6B,cAAA,OAAKE,MAAM,gCAAgCC,MAAO,CAACC,OAAQ,QACzDC,WAAY,WACdlC,IAAA6B,cAAA,OAAKE,MAAM,iBAAiBI,KAAK,UAC/BnC,IAAA6B,cAAA,QAAME,MAAM,WAAU,gBAG1B/B,IAAA6B,cAAA,OAAKE,MAAM,gBAAgBC,MApEf,CAChBY,gBAAiB,QACjBN,MAAO,UACPO,QAAS,GACTC,aAAc,GACdC,aAAc,GACdrB,UAAW,KA+Db1B,IAAA6B,cAAA,OAAKG,MA5DY,CACfgB,OAAQ,OACRC,QAAS,OACTC,eAAgB,kBA0DhBlD,IAAA6B,cAAA,UAAI,wBACJ7B,IAAA6B,cAAA,OAAKG,MAAO,CAAEiB,QAAS,OAAQf,WAAY,WACzClC,IAAA6B,cAAA,SACEE,MAAM,uBACNoB,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SA1Cc,SAACC,GACnB7C,EAAa6C,EAAEC,OAAOC,MAAMC,kBA2C1B1D,IAAA6B,cAAC8B,IAAU,CAAC3B,MAAO,CAAEa,QAAS,OAGlC7C,IAAA6B,cAAA,OAAKE,MAAM,cACT/B,IAAA6B,cAAA,OAAKE,MAAM,uBACT/B,IAAA6B,cAAA,SACEE,MAAM,QACNC,MAAO,CACLK,gBACE,+CACFC,MAAO,QACPsB,SAAU,SAGZ5D,IAAA6B,cAAA,aACE7B,IAAA6B,cAAA,MAAIE,MAAM,eACR/B,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,kBAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,oBAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,SAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,sBAChB7D,IAAA6B,cAAA,MAAIgC,MAAM,OAAM,YAIpB7D,IAAA6B,cAAA,aACGmD,GACCA,EAAgBlB,MACd5D,EAAOI,EACPJ,EAAOI,EAAcA,GAEpB+E,QAAO,SAACC,GACP,OAAOA,EAAKC,eACT7B,cACA8B,SAASX,MAEbd,KAAI,SAACC,EAAKC,GACT,OACEjE,IAAA6B,cAAA7B,IAAA8B,SAAA,KACE9B,IAAA6B,cAAA,UACE7B,IAAA6B,cAAA,MAAIgC,MAAM,OAAOI,EAAQ,EAAG/D,EAAKI,GACjCN,IAAA6B,cAAA,UAAKmC,EAAIyB,YACTzF,IAAA6B,cAAA,UAAKmC,EAAI0B,cAET1F,IAAA6B,cAAA,UAAKmC,EAAIuB,gBACTvF,IAAA6B,cAAA,UAAKmC,EAAItB,iBAS7B1C,IAAA6B,cAAA,YAEA7B,IAAA6B,cAAA,OAAKU,UAAWjB,EAAQG,MACtBzB,IAAA6B,cAACqC,IAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,UAAU,MACVC,MAAOW,EAAkBA,EAAgBpE,OAAS,EAClDN,YAAaA,EACbJ,KAAMA,EACNoE,aAnHqB,SAACC,EAAOC,GAC/BrE,EAAQqE,IAmHNC,oBAhH4B,SAACF,GAC/BhE,GAAgBgE,EAAMf,OAAOC,OAC7BtD,EAAQ,IA+GN4B,MAAO,CAAEO,MAAO,aArGdtC,IAAA6B,cAAA,OACEG,MAAO,CACLiB,QAAS,OACTf,WAAY,SACZgB,eAAgB,SAChBxB,UAAW,OACXgD,cAAe,WAGjB1E,IAAA6B,cAAA,UAAI,0BACJ7B,IAAA6B,cAAA,KAAGG,MAAO,CAAE4B,SAAU,OAAQe,MAAO,QAASC,UAAW,WAAY,+D,kMCnF/Ee,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAA5C,OAAA6C,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAA3C,GAAA,OAAAqC,OAAAI,eAAAC,EAAAC,EAAA,CAAA3C,QAAAsD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,GAAA,IAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAA3C,GAAA,OAAA0C,EAAAC,GAAA3C,GAAA,SAAA0D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAAjE,MAAAqE,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA9E,KAAA,SAAA8E,IAAAD,EAAAE,KAAA/B,EAAA8B,IAAA,MAAAf,GAAA,OAAA/D,KAAA,QAAA8E,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,SAAA,SAAAe,EAAAtB,EAAAuB,GAAA,IAAAC,EAAAhD,EAAA,gBAAAzC,MAAA,SAAAqF,EAAAb,GAAA,SAAAkB,IAAA,WAAAF,GAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAb,EAAAmB,EAAAC,GAAA,IAAAE,EAAAxB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAsB,EAAApG,KAAA,KAAAqG,EAAAD,EAAAtB,IAAAxE,EAAA+F,EAAA/F,MAAA,OAAAA,GAAA,iBAAAA,GAAAuC,EAAAkC,KAAAzE,EAAA,WAAAwF,EAAAG,QAAA3F,EAAAgG,SAAAtI,MAAA,SAAAsC,GAAA6F,EAAA,OAAA7F,EAAA2F,EAAAC,MAAA,SAAAnC,GAAAoC,EAAA,QAAApC,EAAAkC,EAAAC,MAAAJ,EAAAG,QAAA3F,GAAAtC,MAAA,SAAAuI,GAAAF,EAAA/F,MAAAiG,EAAAN,EAAAI,MAAA,SAAAG,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,QAAAE,EAAAtB,KAAAqB,CAAAR,EAAAb,EAAAmB,EAAAC,MAAA,OAAAH,MAAA/H,KAAAgI,YAAA,SAAArB,EAAAV,EAAAE,EAAAM,GAAA,IAAA3I,EAAA,iCAAA6J,EAAAb,GAAA,iBAAAhJ,EAAA,UAAA2K,MAAA,iDAAA3K,EAAA,cAAA6J,EAAA,MAAAb,EAAA,OAAA4B,IAAA,IAAAjC,EAAAkB,SAAAlB,EAAAK,QAAA,KAAA6B,EAAAlC,EAAAkC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAlC,GAAA,GAAAmC,EAAA,IAAAA,IAAA5B,EAAA,gBAAA4B,GAAA,YAAAnC,EAAAkB,OAAAlB,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAA7J,EAAA,MAAAA,EAAA,YAAA2I,EAAAK,IAAAL,EAAAuC,kBAAAvC,EAAAK,SAAA,WAAAL,EAAAkB,QAAAlB,EAAAwC,OAAA,SAAAxC,EAAAK,KAAAhJ,EAAA,gBAAAsK,EAAAxB,EAAAX,EAAAE,EAAAM,GAAA,cAAA2B,EAAApG,KAAA,IAAAlE,EAAA2I,EAAAyC,KAAA,6BAAAd,EAAAtB,MAAAE,EAAA,gBAAA1E,MAAA8F,EAAAtB,IAAAoC,KAAAzC,EAAAyC,MAAA,UAAAd,EAAApG,OAAAlE,EAAA,YAAA2I,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,OAAA,SAAA+B,EAAAF,EAAAlC,GAAA,IAAA0C,EAAA1C,EAAAkB,SAAAgB,EAAArD,SAAA6D,GAAA,QAAAC,IAAAzB,EAAA,OAAAlB,EAAAkC,SAAA,eAAAQ,GAAAR,EAAArD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAsC,EAAAP,EAAAF,EAAAlC,GAAA,UAAAA,EAAAkB,SAAA,WAAAwB,IAAA1C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAH,EAAA,aAAAnC,EAAA,IAAAoB,EAAAxB,EAAAe,EAAAgB,EAAArD,SAAAmB,EAAAK,KAAA,aAAAsB,EAAApG,KAAA,OAAAyE,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAsB,EAAAtB,IAAAL,EAAAkC,SAAA,KAAA3B,EAAA,IAAAuC,EAAAnB,EAAAtB,IAAA,OAAAyC,IAAAL,MAAAzC,EAAAkC,EAAAa,YAAAD,EAAAjH,MAAAmE,EAAAgD,KAAAd,EAAAe,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAsC,GAAA3C,EAAAkC,SAAA,KAAA3B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAkC,SAAA,KAAA3B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAzB,EAAAyB,EAAAQ,YAAA,GAAAjC,EAAApG,KAAA,gBAAAoG,EAAAtB,IAAA+C,EAAAQ,WAAAjC,EAAA,SAAA1B,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA9K,QAAA,KAAAiL,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA9K,QAAA,GAAAoF,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAAnH,MAAAiI,EAAAG,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAnH,WAAA8G,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAApG,WAAA8G,EAAAF,MAAA,UAAAjC,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAAlF,MAAA4E,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAA5E,MAAA2E,EAAApB,cAAA,IAAAoB,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAmG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAE,QAAAvG,EAAAwG,KAAA,SAAAJ,GAAA,OAAAlG,OAAAuG,eAAAvG,OAAAuG,eAAAL,EAAA3D,IAAA2D,EAAAM,UAAAjE,EAAAvB,EAAAkF,EAAApF,EAAA,sBAAAoF,EAAAjG,UAAAD,OAAA6B,OAAAgB,GAAAqD,GAAApG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAwB,QAAAxB,IAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,gBAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,MAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAmG,oBAAA1E,GAAAqF,IAAA9B,OAAAzJ,MAAA,SAAAqI,GAAA,OAAAA,EAAAa,KAAAb,EAAA/F,MAAAiJ,EAAA9B,WAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAA/L,QAAA,KAAAwF,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAjC,EAAAnH,MAAA2C,EAAAwE,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAAhF,EAAA8C,SAAAb,EAAA9B,UAAA,CAAAmG,YAAArE,EAAA4D,MAAA,SAAAuB,GAAA,QAAAC,KAAA,OAAArC,KAAA,OAAAX,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAhB,OAAA,YAAAb,SAAAsC,EAAA,KAAAc,WAAAxC,QAAA0C,IAAAyB,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAlH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAArI,MAAA,WAAAqI,QAAA5B,IAAA4C,KAAA,gBAAA9C,MAAA,MAAA+C,EAAA,KAAA/B,WAAA,GAAAG,WAAA,aAAA4B,EAAAjK,KAAA,MAAAiK,EAAAnF,IAAA,YAAAoF,MAAAlD,kBAAA,SAAAmD,GAAA,QAAAjD,KAAA,MAAAiD,EAAA,IAAA1F,EAAA,cAAA2F,EAAAC,EAAAC,GAAA,OAAAlE,EAAApG,KAAA,QAAAoG,EAAAtB,IAAAqF,EAAA1F,EAAAgD,KAAA4C,EAAAC,IAAA7F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAsC,KAAAkD,EAAA,QAAA5B,EAAA,KAAAR,WAAAzK,OAAA,EAAAiL,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAtC,EAAAyB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA,KAAAgC,KAAA,KAAAS,EAAA1H,EAAAkC,KAAA8C,EAAA,YAAA2C,EAAA3H,EAAAkC,KAAA8C,EAAA,iBAAA0C,GAAAC,EAAA,SAAAV,KAAAjC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,WAAA+B,KAAAjC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,QAAAT,KAAAjC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,kDAAAqD,KAAAjC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAf,OAAA,SAAAjH,EAAA8E,GAAA,QAAA4D,EAAA,KAAAR,WAAAzK,OAAA,EAAAiL,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAAgC,MAAAjH,EAAAkC,KAAA8C,EAAA,oBAAAiC,KAAAjC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAzK,GAAA,aAAAA,IAAAyK,EAAA3C,QAAAhD,MAAA2F,EAAAzC,aAAAyC,EAAA,UAAArE,EAAAqE,IAAApC,WAAA,UAAAjC,EAAApG,OAAAoG,EAAAtB,MAAA2F,GAAA,KAAA9E,OAAA,YAAA8B,KAAAgD,EAAAzC,WAAAhD,GAAA,KAAA0F,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA6B,GAAA,aAAA7B,EAAApG,KAAA,MAAAoG,EAAAtB,IAAA,gBAAAsB,EAAApG,MAAA,aAAAoG,EAAApG,KAAA,KAAAyH,KAAArB,EAAAtB,IAAA,WAAAsB,EAAApG,MAAA,KAAAkK,KAAA,KAAApF,IAAAsB,EAAAtB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAArB,EAAApG,MAAAiI,IAAA,KAAAR,KAAAQ,GAAAjD,GAAA2F,OAAA,SAAA3C,GAAA,QAAAU,EAAA,KAAAR,WAAAzK,OAAA,EAAAiL,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,YAAA0C,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA4F,MAAA,SAAA9C,GAAA,QAAAY,EAAA,KAAAR,WAAAzK,OAAA,EAAAiL,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA1B,EAAAyB,EAAAQ,WAAA,aAAAjC,EAAApG,KAAA,KAAA6K,EAAAzE,EAAAtB,IAAAsD,EAAAP,GAAA,OAAAgD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,YAAAf,SAAA,CAAArD,SAAAiC,EAAAgD,GAAAf,aAAAE,WAAA,cAAA/B,SAAA,KAAAb,SAAAsC,GAAApC,IAAAvC,EAgBA,IAAMhE,EAAYL,YAAW,CAC3BE,KAAM,CACJW,SAAU,QAGZ8L,QAAS,CACPjL,QAAS,OACTyB,cAAe,SACfyJ,aAAc,cAEhBC,IAAK,CACHnL,QAAS,OACTyB,cAAe,MACfyJ,aAAc,aACdjL,eAAgB,iBAElBmL,OAAQ,CACNrL,OAAQ,kBAINsL,EAAuB,CAC3BtM,MAAO,CACLuM,KAAM,CACJjM,MAAO,UACPkM,WAAY,0CACZC,cAAe,cACf7K,SAAU,OACV,gBAAiB,CACftB,MAAO,YAGXoM,QAAS,CACPpM,MAAO,UACPqM,UAAW,aAuQF3P,uBAJS,SAACC,GAAK,MAAM,CAClC2P,YAAa3P,EAAM4P,gBAAgBD,eAGtB5P,EAlQE,SAACQ,GAChB,IAAM8B,EAAUM,IACVkN,EAAWC,cAEjBtP,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BuP,EAAKrP,EAAA,GAAEsP,EAAQtP,EAAA,GACtBuP,EAAwBxP,mBAAS,IAAGyP,EAAAvP,YAAAsP,EAAA,GAA7B/C,EAAIgD,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAA0B3P,mBAAS,IAAG4P,EAAA1P,YAAAyP,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAsC/P,mBAAS,IAAGgQ,EAAA9P,YAAA6P,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAwBnQ,mBAAS,IAAGoQ,EAAAlQ,YAAAiQ,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA0BvQ,mBAAS,IAAGwQ,EAAAtQ,YAAAqQ,EAAA,GAA/BhR,EAAKiR,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8B1Q,mBAAS,IAAG2Q,EAAAzQ,YAAAwQ,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA8B9Q,mBAASoP,EAAS7P,MAAMwR,SAAQC,EAAA9Q,YAAA4Q,EAAA,GAAvDC,EAAOC,EAAA,GACdC,GAD0BD,EAAA,GACoBhR,oBAAS,IAAMkR,EAAAhR,YAAA+Q,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAA8BrR,oBAAS,GAAMsR,GAAApR,YAAAmR,EAAA,GAAtCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAEpBG,GAASC,sBACTC,GAAWC,wBAEXC,GAAe,eAAAC,EAAAC,YAAA9L,IAAAyG,MAAG,SAAAsF,EAAOnN,GAAK,IAAAiF,EAAApI,EAAAuQ,EAAAC,EAAAC,EAAA,OAAAlM,IAAAwB,MAAA,SAAA2K,GAAA,cAAAA,EAAA7E,KAAA6E,EAAAlH,MAAA,UAC7BuG,IAAWE,GAAQ,CAAAS,EAAAlH,KAAA,eAAAkH,EAAA1H,OAAA,qBAGpByG,EAAgB,CAADiB,EAAAlH,KAAA,SACA,OAAjBsG,IAAW,GAAMY,EAAAlH,KAAA,EACIuG,GAAOY,oBAAoB,CAC9C5O,KAAM,OACN6O,KAAMX,GAASY,WAAWC,eAC1BC,gBAAiB,CACfnD,MAAOA,KAER,KAAD,EANU,KAANxF,EAAMsI,EAAA7H,MAQDN,MAAM,CAADmI,EAAAlH,KAAA,SACd1F,QAAQC,IAAIqE,EAAOG,MAAMyI,SAASN,EAAAlH,KAAA,wBAAAkH,EAAAlH,KAAA,GAEhByH,IAAMC,KACtB,+CACA,CACEC,eAAgB/I,EAAOgJ,cAActR,GACrC8N,QACAsB,UACAnE,OACAwD,cACAJ,QACAQ,OACA9Q,QACAwR,YAEF,KAAD,GAbKrP,EAAG0Q,EAAA7H,KAcT0H,EACkCvQ,EAAIC,KAA9BuQ,EAAaD,EAAbC,cAAeC,EAAMF,EAANE,OACvBX,IAAW,GAEI,oBAAXW,EACFV,GAAOsB,mBAAmBb,GAAezQ,MAAK,SAAUqI,GAClDA,EAAOG,OACTzE,QAAQC,IAAI,uBACZuN,YAAM,wCACNxN,QAAQC,IAAIqE,EAAOG,SAEnBzE,QAAQC,IAAI,sBACZuN,IAAMC,QAAQ,8CAIlBzN,QAAQC,IAAI,sBACZuN,IAAMC,QAAQ,0CACf,QAAAb,EAAAlH,KAAA,iBAGH8H,IAAM/I,MAAM,oCAAoC,yBAAAmI,EAAA3E,UAAAuE,OAEnD,gBAtDoBkB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,YAAA,GAwDfC,GAAmB,eAAAC,EAAAvB,YAAA9L,IAAAyG,MAAG,SAAA6G,EAAO1P,GAAC,OAAAoC,IAAAwB,MAAA,SAAA+L,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAtI,MAAA,OAClCkG,EAAmBvN,EAAEsK,UAErBmC,EAAQzM,EAAEE,MAAM0P,QAAQpD,MACxBX,EAAQ7L,EAAE4I,MACVoE,EAAWhN,EAAEE,MAAM0P,QAAQ7C,SAC3Bd,EAASjM,EAAEE,MAAM0P,QAAQ5D,OACzBK,EAAerM,EAAEE,MAAM0P,QAAQxD,aAC/BQ,EAAS5M,EAAEE,MAAM0P,QAAQlU,OAAO,wBAAAiU,EAAA/F,UAAA8F,OACjC,gBATwBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,YAAA,GAgBzB,OACE9S,IAAA6B,cAAA7B,IAAA8B,SAAA,KACE9B,IAAA6B,cAAA,WAASU,UAAU,kBACjBvC,IAAA6B,cAAA,OAAKU,UAAU,aACbvC,IAAA6B,cAAA,OAAKU,UAAU,OACbvC,IAAA6B,cAAA,OAAKU,UAAU,YACbvC,IAAA6B,cAACwR,IAAI,CAAC9Q,UAAWjB,EAAQG,MACvBzB,IAAA6B,cAACyR,IAAW,CAAC/Q,UAAWjB,EAAQ4M,SAyE9BlO,IAAA6B,cAAC0R,IAAS,CACRC,MAAM,QACNtS,GAAG,uBACHuS,WAAU,8CACVzQ,OAAO,SACP0Q,QAAQ,WACRvQ,KAAK,QACLwQ,UAAQ,EACRlQ,MAAOuL,EACP1L,SAAU,SAACC,GAAC,OAAK0L,EAAS1L,EAAEC,OAAOC,QACnCmQ,WAAS,IAEX5T,IAAA6B,cAACqQ,cAAW,CACV2B,QAASvF,EACThL,SAnGI,SAACC,GACrB2B,QAAQC,IAAI,OAAQ5B,GACpB2B,QAAQC,IAAIkM,GAASY,WAAWC,mBAmGlBlS,IAAA6B,cAACiS,iBAAc,CACbD,QAAS,CAAEE,KAAM,WACjBzQ,SAAUyP,KAGZ/S,IAAA6B,cAAA,OAAKU,UAAWjB,EAAQ8M,KACtBpO,IAAA6B,cAACmS,IAAM,CACLN,QAAQ,YACRpR,MAAM,UACNC,UAAWjB,EAAQ+M,OACnB4F,QAAS1C,IAERN,GACCjR,IAAA6B,cAAA,OAAKE,MAAM,iBAAiBI,KAAK,UAC/BnC,IAAA6B,cAAA,QAAME,MAAM,WAAU,eAGxB,oBAQZ/B,IAAA6B,cAAA,OAAKU,UAAU,YACbvC,IAAA6B,cAAA,OAAKU,UAAU,aACbvC,IAAA6B,cAAA,UAAI,cACJ7B,IAAA6B,cAAA,OAAKU,UAAU,aACbvC,IAAA6B,cAAA,OAAKU,UAAU,gBACbvC,IAAA6B,cAAA,OACEqS,IAAI,kGACJ3R,UAAU,YACV4R,IAAI,MAGRnU,IAAA6B,cAAA,OAAKU,UAAU,iBACbvC,IAAA6B,cAAA,MAAIU,UAAU,YAAY/C,EAAMoP,YAAYwF,MAC5CpU,IAAA6B,cAAA,SAAG,SAEL7B,IAAA6B,cAAA,MAAIU,UAAU,kBACZvC,IAAA6B,cAAA,UAAKrC,EAAMoP,YAAYwF,MACvBpU,IAAA6B,cAAA,UAAI,eACJ7B,IAAA6B,cAAA,UAAI,iBAIR7B,IAAA6B,cAAA,OAAKU,UAAU,kBACbvC,IAAA6B,cAAA,YAAM,YACN7B,IAAA6B,cAAA,QAAMU,UAAU,WAAU,SAE5BvC,IAAA6B,cAAA,OAAKU,UAAU,kBACbvC,IAAA6B,cAAA,YAAM,YACN7B,IAAA6B,cAAA,QAAMU,UAAU,WAAU,SAE5BvC,IAAA6B,cAAA,OAAKU,UAAU,4BACbvC,IAAA6B,cAAA,YAAM,YACN7B,IAAA6B,cAAA,QAAMU,UAAU,YAAW,mB","file":"static/js/7.5e8c1c46.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions/CurrentSubscription\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nconst SubscriptionHistory = (props) => {\n  const [currentplan, setCurrentPlan] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchinp, setSearchinp] = React.useState(\"\");\n\n  const lastind = currentplan.length;\n\n  useEffect(() => {\n    if (props.currentUser) {\n      props\n        .dispatch(\n          actions.CurrentSubscription({\n            client_id: props.currentUser.id,\n          })\n        )\n        .then((res) => {\n          setCurrentPlan(res?.data);\n        });\n    } else {\n      setCurrentPlan([]);\n    }\n  }, [props.currentUser]);\n\n  const cardStyle = {\n    backgroundColor: \"white\",\n    color: \"#142841\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    marginTop: 35,\n  };\n  // main component styling\n  const divStyle = {\n    margin: \"15 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  };\n\n  // for pagination==================================================================\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \"& > *\": {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const Searchinput = (e) => {\n    setSearchinp(e.target.value.toLowerCase());\n  };\n\n  return (\n    <>\n      {!props.currentUser ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: \"64px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h1>You are not Logged In.</h1>\n          <p style={{ fontSize: \"15px\", width: \"260px\", textAlign: \"center\" }}>\n            Please login to your PTP Account to access this page.\n          </p>\n        </div>\n      ) : (\n        <>\n          {!currentplan.length > 0 ? (\n            <div\n              class=\"d-flex justify-content-center\"\n              style={{ height: \"100vh\", alignItems: \"center\" }}\n            >\n              <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div class=\"card mt-4 \" style={{ maxWidth: \"770px\" }}>\n                <div class=\"card-header\">Active Plan Details</div>\n                <div\n                  class=\"card-body\"\n                  style={{\n                    backgroundImage:\n                      \"linear-gradient(to right, rgb(16, 74, 96), #997e7b)\",\n                    color: \"white\",\n                  }}\n                >\n                  <div className=\"d-flex justify-content-around\">\n                    <div>\n                      <h5 class=\"card-title\">\n                        Current Plan:{\" \"}\n                        <b>{currentplan[lastind - 1].plan_name} </b>\n                      </h5>\n                    </div>\n\n                    <div>\n                      <h5 class=\"card-title\">\n                        Start Date:{\" \"}\n                        <b>{currentplan[lastind - 1].start_date} </b>\n                      </h5>\n                    </div>\n                  </div>\n\n                  <div className=\"d-flex justify-content-around mt-3\">\n                    <div>\n                      <h5 class=\"card-title\">\n                        Amount: <b>${currentplan[lastind - 1].amount}</b>\n                      </h5>\n                    </div>\n\n                    <div>\n                      <h5 class=\"card-title\">\n                        Expire Date: <b>{currentplan[lastind - 1].end_date} </b>\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col col-md-12\" style={cardStyle}>\n                <div style={divStyle}>\n                  <h1>Subscription History </h1>\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <input\n                      class=\"form-control mr-sm-2\"\n                      type=\"search\"\n                      placeholder=\"subscription type\"\n                      aria-label=\"Search\"\n                      onChange={Searchinput}\n                    />\n                    <SearchIcon style={{ padding: 2 }} />\n                  </div>\n                </div>\n                <div class=\"bd-example\">\n                  <div class=\"table-responsive-sm\">\n                    <table\n                      class=\"table\"\n                      style={{\n                        backgroundImage:\n                          \"linear-gradient(to right, #142841 , #104A60)\",\n                        color: \"white\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      <thead>\n                        <tr class=\"thead-dark \">\n                          <th scope=\"col\">Subscription Id</th>\n                          <th scope=\"col\">Subscription Type</th>\n                          <th scope=\"col\">Start Date</th>\n                          <th scope=\"col\">End Date</th>\n                          <th scope=\"col\">Amount</th>\n                        </tr>\n                      </thead>\n\n                      <tbody>\n                        {currentplan &&\n                          currentplan\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map((ele, index) => {\n                              return (\n                                <>\n                                  <tr>\n                                    <td scope=\"row\">\n                                      {index + 1 + page * rowsPerPage}\n                                    </td>\n                                    <td>{ele.plan_name}</td>\n                                    <td>{ele.start_date}</td>\n                                    <td>{ele.end_date}</td>\n                                    <td>${ele.amount}</td>\n                                  </tr>\n                                </>\n                              );\n                            })}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <div></div>\n\n                <div className={classes.root}>\n                  <TablePagination\n                    rowsPerPageOptions={[5, 10, 20, 50]}\n                    component=\"div\"\n                    count={currentplan ? currentplan.length : 0}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    class={{ color: \"snow\" }}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.auth.currentUser,\n  loggedIn: state.auth.isLoggedIn,\n  currentsubscriptionreducer: state.currentsubscriptionreducer.CurrentPlan,\n});\n\nexport default connect(mapStateToProps)(SubscriptionHistory);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/actions/StripeTransactions\";\n\nconst StripePaymentHistory = (props) => {\n  // console.log(\"props\", props.currentUser.id);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchinp, setSearchinp] = React.useState(\"\");\n  const [TranscationData, setTransactionData] = React.useState([]);\n  console.log(\"TranscationData\",TranscationData)\n\n  useEffect(() => {\n    if (props.currentUser) {\n      props\n        .dispatch(\n          actions.StripeTransactions({\n            client_id: props.currentUser.id,\n          })\n        )\n        .then((res) => {\n          setTransactionData(res?.data);\n        });\n    } else {\n      setTransactionData([]);\n    }\n  }, [props.currentUser]);\n\n  const cardStyle = {\n    backgroundColor: \"white\",\n    color: \"#142841\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    marginTop: 35,\n  };\n  // main component styling\n  const divStyle = {\n    margin: \"15 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  };\n\n  // for pagination==================================================================\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \"& > *\": {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const Searchinput = (e) => {\n    setSearchinp(e.target.value.toLowerCase());\n  };\n\n  return (\n    <>\n      {!props.currentUser ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: \"64px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h1>You are not Logged In.</h1>\n          <p style={{ fontSize: \"15px\", width: \"260px\", textAlign: \"center\" }}>\n            Please login to your PTP Account to access this page.\n          </p>\n        </div>\n      ) : (\n<>\n\n{\n  !TranscationData.length > 0\n  ?\n          <div class=\"d-flex justify-content-center\" style={{height: '100vh',\n            alignItems: 'center'}}>\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div> :\n        <div class=\"col col-md-12\" style={cardStyle}>\n  <div style={divStyle}>\n    <h1>Transcation History </h1>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={Searchinput}\n      />\n      <SearchIcon style={{ padding: 2 }} />\n    </div>\n  </div>\n  <div class=\"bd-example\">\n    <div class=\"table-responsive-sm\">\n      <table\n        class=\"table\"\n        style={{\n          backgroundImage:\n            \"linear-gradient(to right, #142841 , #104A60)\",\n          color: \"white\",\n          fontSize: \"1rem\",\n        }}\n      >\n        <thead>\n          <tr class=\"thead-dark \">\n            <th scope=\"col\">Transcation Id</th>\n            <th scope=\"col\">Transcation Date</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Transcation status</th>\n            <th scope=\"col\">Amount</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {TranscationData &&\n            TranscationData.slice(\n              page * rowsPerPage,\n              page * rowsPerPage + rowsPerPage\n            )\n              .filter((item) => {\n                return item.payment_status\n                  .toLowerCase()\n                  .includes(searchinp);\n              })\n              .map((ele, index) => {\n                return (\n                  <>\n                    <tr>\n                      <th scope=\"row\">{index + 1+(page*rowsPerPage)}</th>\n                      <td>{ele.created_at}</td>\n                      <td>{ele.client_email}</td>\n\n                      <td>{ele.payment_status}</td>\n                      <td>{ele.amount}</td>\n                    </tr>\n                  </>\n                );\n              })}\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <div></div>\n\n  <div className={classes.root}>\n    <TablePagination\n      rowsPerPageOptions={[5, 10, 20, 50]}\n      component=\"div\"\n      count={TranscationData ? TranscationData.length : 0}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n      class={{ color: \"snow\" }}\n    />\n  </div>\n</div>\n\n}\n\n\n</>\n        \n      )}\n    </>\n  );\n};\n\n// export default StripePaymentHistory;\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.auth.currentUser,\n  loggedIn: state.auth.isLoggedIn,\n});\n\nexport default connect(mapStateToProps)(StripePaymentHistory);\n","import React, { useState } from \"react\";\r\nimport \"./StripePayment.scss\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AddressElement } from \"@stripe/react-stripe-js\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: \"auto\",\r\n    // margin: \"35vh auto\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"flex-start\",\r\n  },\r\n  div: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"flex-start\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: \"2em auto 1em\",\r\n  },\r\n});\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Checkout = (props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [postal_code, setpostal_code] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [priceid, setPriceid] = useState(location.state.priceid);\r\n  const [AddressValidate, setAddressValidate] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmitSub = async (event) => {\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n    if (AddressValidate) {\r\n      setLoading(true);\r\n      const result = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          email: email,\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        console.log(result.error.message);\r\n      } else {\r\n        const res = await axios.post(\r\n          \"http://localhost:3051/api/create-subsciption\",\r\n          {\r\n            payment_method: result.paymentMethod.id,\r\n            email,\r\n            country,\r\n            name,\r\n            postal_code,\r\n            line1,\r\n            city,\r\n            state,\r\n            priceid,\r\n          }\r\n        );\r\n        // eslint-disable-next-line camelcase\r\n        const { client_secret, status } = res.data;\r\n        setLoading(false);\r\n\r\n        if (status === \"requires_action\") {\r\n          stripe.confirmCardPayment(client_secret).then(function (result) {\r\n            if (result.error) {\r\n              console.log(\"There was an issue!\");\r\n              toast(\"There was an issue! Please try Again\");\r\n              console.log(result.error);\r\n            } else {\r\n              console.log(\"You got the money!\");\r\n              toast.success(\"Congratulation You are now Subscrible\");\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"You got the money!\");\r\n          toast.success(\"Congratulation You are now Subscrible\");\r\n        }\r\n      }\r\n    } else {\r\n      toast.error(\"all address fields are mandatory\");\r\n    }\r\n  };\r\n\r\n  const handlechangeAddress = async (e) => {\r\n    setAddressValidate(e.complete);\r\n\r\n    setCity(e.value.address.city);\r\n    setName(e.name);\r\n    setCountry(e.value.address.country);\r\n    setLine1(e.value.address.line1);\r\n    setpostal_code(e.value.address.postal_code);\r\n    setState(e.value.address.state);\r\n  };\r\n\r\n  const handlepayment = (e) => {\r\n    console.log(\"card\", e);\r\n    console.log(elements.getElement(CardElement));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"paymentSection\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-7\">\r\n              <Card className={classes.root}>\r\n                <CardContent className={classes.content}>\r\n                  {/* <form class=\"form-inline \">\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"line1\"\r\n                        value={line1}\r\n                        onChange={(e) => setLine1(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"city\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"state\"\r\n                        value={state}\r\n                        onChange={(e) => setState(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"country\"\r\n                        value={country}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div className=\"col-sm-4 mb-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"country\"\r\n                        value={postal_code}\r\n                        onChange={(e) => setpostal_code(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-sm-8\">\r\n                    \r\n                    </div>\r\n                  \r\n                  </form> */}\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    id=\"outlined-email-input\"\r\n                    helperText={`Email you'll recive updates and receipts on`}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    fullWidth\r\n                  />\r\n                  <CardElement\r\n                    options={CARD_ELEMENT_OPTIONS}\r\n                    onChange={handlepayment}\r\n                  />\r\n                  <AddressElement\r\n                    options={{ mode: \"billing\" }}\r\n                    onChange={handlechangeAddress}\r\n                  />\r\n\r\n                  <div className={classes.div}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={handleSubmitSub}\r\n                    >\r\n                      {loading ? (\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                          <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                      ) : (\r\n                        \"Subscription\"\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"col-md-5\">\r\n              <div className=\"cardPanel\">\r\n                <h4>Your Order</h4>\r\n                <div className=\"Orderitem\">\r\n                  <div className=\"OrderitemImg\">\r\n                    <img\r\n                      src=\"https://www.shutterstock.com/image-vector/two-racing-horses-competing-each-260nw-1549927643.jpg\"\r\n                      className=\"img-fluid\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"Orderiteminfo\">\r\n                    <h5 className=\"planName\">{props.planDetails.plan}</h5>\r\n                    <p>Text</p>\r\n                  </div>\r\n                  <ul className=\"planDetaleList\">\r\n                    <li>{props.planDetails.plan}</li>\r\n                    <li>Plan List 2</li>\r\n                    <li>Plan List 3</li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"pricNameNumber\">\r\n                  <span>Discount</span>\r\n                  <span className=\"pricPay\">$200</span>\r\n                </div>\r\n                <div className=\"pricNameNumber\">\r\n                  <span>Discount</span>\r\n                  <span className=\"pricPay\">$200</span>\r\n                </div>\r\n                <div className=\"pricNameNumber totalPric\">\r\n                  <span>Discount</span>\r\n                  <span className=\"pricName\">$200</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  planDetails: state.stripepricedata.planDetails,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}