{"version":3,"sources":["pages/forgotPass/forgotPass.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ForgotPass","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","_defineProperty","_assertThisInitialized","evt","setState","target","e","preventDefault","dispatch","clientID","match","params","id","newPass","confirmPass","status","resetPass","pass","history","_createClass","_componentDidMount","_asyncToGenerator","_callee","_this$props","isLoggedIn","currentUser","_context","this","logoutUser","email","cleanMessages","apply","arguments","React","createElement","className","style","textAlign","maxWidth","margin","marginTop","fontSize","color","forgotError","forgotMessage","onSubmit","resetPassword","onChange","onDataChange","required","placeholder","autoComplete","Button","size","Component","withRouter","connect","auth"],"mappings":"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","file":"static/js/39.c6f53339.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { resetPass, logoutUser, cleanMessages } from '../../redux/actions/auth'\r\nimport { Button } from 'reactstrap'\r\n\r\n\r\nclass ForgotPass extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newPass: '',\r\n            confirmPass: '',\r\n            status: '',\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { isLoggedIn, dispatch, currentUser } = this.props\r\n      if(isLoggedIn){\r\n        dispatch(logoutUser(currentUser.email))\r\n      }\r\n      dispatch(cleanMessages())\r\n    }\r\n\r\n    onDataChange = (evt) => {\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n      };\r\n\r\n    resetPassword = (e) => {\r\n        e.preventDefault();\r\n        const {dispatch} = this.props\r\n        let clientID = this.props.match.params.id\r\n        if (this.state.newPass.length >= 4) {\r\n          if (this.state.newPass === this.state.confirmPass) {\r\n            dispatch(resetPass({ id: clientID, pass: this.state.newPass },this.props.history))\r\n          } else {\r\n            return this.setState({ status: 'Confirmation password does not match, please try again.' })\r\n          }\r\n        } else {\r\n          return this.setState({ status: 'Password length should not be under 4 charachters long' })\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"rounded-top\" style={{textAlign: 'center', maxWidth: '400px', margin: 'auto', marginTop: 100}}>\r\n                    <h1>Reset your password </h1>\r\n                    <p style={{ textAlign: 'center', fontSize: 12, marginTop: 10, color: 'red' }}>{this.state.status}</p>\r\n                    <p style={{ textAlign: 'center', fontSize: 12, marginTop: 10, color: 'red' }}>{this.props.forgotError}</p>\r\n                    <p style={{ textAlign: 'center', fontSize: 12, marginTop: 10, color: 'blue' }}>{this.props.forgotMessage}</p>\r\n\r\n                    <form onSubmit={this.resetPassword} >\r\n                        <div style={{textAlign: 'left' }}>\r\n                            <label>Password : </label>\r\n                            <input\r\n                            className=\"form-control rounded-right border-0 text-dark opacity-80 email-field\"\r\n                            style={{textAlign: 'left'}}\r\n                            onChange={this.onDataChange}\r\n                            type=\"password\"\r\n                            required\r\n                            value={this.state.newPass}\r\n                            name=\"newPass\"\r\n                            placeholder=\"New Password\"\r\n                            autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: 20, textAlign: 'left' }}>\r\n                            <label>Confirm : </label>\r\n                            <input\r\n                            className=\"form-control rounded-right border-0 text-dark opacity-80 email-field\"\r\n                            style={{textAlign: 'left'}}\r\n                            onChange={this.onDataChange}\r\n                            type=\"password\"\r\n                            required\r\n                            value={this.state.confirmPass}\r\n                            name=\"confirmPass\"\r\n                            placeholder=\"Confirm Password\"\r\n                            autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div style={{ marginTop: 24 }}>\r\n                        <Button \r\n                            color=\"primary\" style={{ color: 'white' }} size=\"md\"\r\n                            type=\"submit\">\r\n                                Reset Password\r\n                        </Button>\r\n                        </div>\r\n                       \r\n                        </form>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    currentUser: state.auth.currentUser,\r\n    forgotError: state.auth.forgotError,\r\n    forgotMessage: state.auth.forgotMessage,\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(ForgotPass))\r\n"],"sourceRoot":""}